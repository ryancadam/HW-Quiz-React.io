{"version":3,"sources":["Components/quizQs.module.css","Components/Backdrop.module.css","Components/Display.module.css","Components/quizQs.js","Ox.js","Components/Backdrop.js","Components/ScoreDisplay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","quizQs","props","className","style","FlexContainer","Radio","onSubmit","formSubmit","type","name","value","defaultChecked","Btn","Ox","children","backdrop","show","Backdrop","onClick","clicked","scoreDisplay","closed","Display","transform","opacity","userScore","App","state","correctAnswers","score","showScore","formSubmitHandler","e","preventDefault","scrollTo","userAnswers","target","q1","q2","q3","q4","newScore","forEach","ans","index","setState","closeScore","ScoreDisplay","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb88a78d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexContainer\":\"quizQs_FlexContainer__2OWfO\",\"Radio\":\"quizQs_Radio__GHzPU\",\"Btn\":\"quizQs_Btn__IXbZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1Um-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__Dgkvk\"};","import React from 'react';\r\n\r\nimport style from './quizQs.module.css';\r\n\r\nconst quizQs = props => {\r\n    return (\r\n        <div className={style.FlexContainer}>\r\n            <h2>How well do you know The Reuben?</h2>\r\n            <form className={style.Radio} onSubmit={props.formSubmit}>\r\n                <div>\r\n                    <p>1. Who invented the Reuben?</p>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q1\" value=\"A\" defaultChecked=\"true\" />\r\n                        Reuben Kulakofsky, a grocer in Omaha, Nebraska\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q1\" value=\"B\"/>\r\n                        Arnold Reuben, owner of Reuben's Delicatessen in NYC\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q1\" value=\"C\"/>\r\n                        The Reuben always has been, always will be.\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>2. How much pastrami goes in a Reuben?</p>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q2\" value=\"A\" defaultChecked=\"true\" />\r\n                        Roughly 4 oz.\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q2\" value=\"B\"/>\r\n                        Eyeball it. Whatever feels right\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q2\" value=\"C\"/>\r\n                        All of it.\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>3. Are you hankering for a Reuben right now?</p>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q3\" value=\"A\" defaultChecked=\"true\"/>\r\n                        Yeah\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q3\" value=\"B\"/>\r\n                        Nah, just ate\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q3\" value=\"C\"/>\r\n                        Can't talk, eating a Reuben\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>4. Your significant other won't let you serve Reubens at your wedding. What do you do?</p>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q4\" value=\"A\" defaultChecked=\"true\"/>\r\n                        Respect his/her wishes\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q4\" value=\"B\"/>\r\n                        Leave\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                        <input type=\"radio\" name=\"q4\" value=\"C\"/>\r\n                        I have no significant other. I have only the Reuben\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <input className={style.Btn} type=\"submit\"/>\r\n                </div>\r\n            </form>\r\n        </div>      \r\n    );\r\n};\r\n\r\nexport default quizQs;","const Ox = props => props.children;\r\n\r\nexport default Ox;","import React from 'react';\r\nimport style from './Backdrop.module.css';\r\n\r\nconst backdrop = props => (\r\n    props.show ? <div className={style.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Ox from '../Ox';\r\nimport Backdrop from './Backdrop';\r\nimport style from './Display.module.css';\r\n\r\nconst scoreDisplay = props => (\r\n    <Ox>\r\n        <Backdrop show={props.show} clicked={props.closed} />\r\n        <div \r\n            className={style.Display}\r\n            style={{transform: props.show ? 'translateY(0)': 'translateY(-100vh)', opacity: props.show ? '1': '0'\r\n            }}>\r\n            <h2>Score: {props.userScore}%</h2>\r\n        </div>\r\n    </Ox>\r\n);\r\n\r\nexport default scoreDisplay;","import React, { Component } from 'react';\nimport './App.css';\nimport QuizQs from './Components/quizQs';\nimport ScoreDisplay from './Components/ScoreDisplay';\n\nclass App extends Component {\n  state = {\n    correctAnswers: ['C', 'C', 'C', 'C'],\n    score: 0,\n    showScore: false,\n  }\n\n\n  formSubmitHandler = e => {\n    e.preventDefault();\n    \n    // eslint-disable-next-line no-restricted-globals\n    scrollTo(0,0);\n        \n    const userAnswers = [e.target.q1.value, e.target.q2.value, e.target.q3.value, e.target.q4.value];\n\n    let newScore = this.state.score;\n    userAnswers.forEach((ans, index) => {\n      if(ans === this.state.correctAnswers[index]){\n        newScore = newScore + 25;\n      }\n    })\n    this.setState({score: newScore})\n    this.setState({showScore: true})\n    \n  }\n\n  closeScore = () => {\n    this.setState({score: 0})\n    this.setState({showScore: false})\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <ScoreDisplay \n          show={this.state.showScore}\n          closed={this.closeScore}\n          userScore={this.state.score}>\n        </ScoreDisplay>\n        <QuizQs \n          formSubmit={this.formSubmitHandler} \n          />                  \n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}